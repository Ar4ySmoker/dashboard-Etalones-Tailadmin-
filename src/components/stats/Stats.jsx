'use client'

import { useState, useEffect } from 'react'
import { motion } from 'framer-motion' // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º motion –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
import CardDataStats from '@/src/components/CardDataStats'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç CardDataStats
import { useSession } from 'next-auth/react';
import ManagerSelector from '@/src/components/ManagerSelect/ManagerSelect';

const Stats = () => {
  const [managerStats, setManagerStats] = useState(null)
  const [selectedManagerId, setSelectedManagerId] = useState(null)
  const [stats, setStats] = useState(null)

  const session = useSession();

  useEffect(() => {
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º fetch
    if (session.data.managerRole === 'admin') {
      fetch('/api/admin/stats') // –í–∞–∂–Ω–æ: —É–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è –≤–∞—à–µ–≥–æ API
        .then((response) => {
          if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏')
          }
          return response.json()
        })
        .then((data) => setStats(data)) // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        .catch((error) => console.error(error))
    }
  }, [])

  useEffect(() => {
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–ª–∏ —Ç–µ–∫—É—â–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    if (session.data.managerRole === 'admin' && selectedManagerId) {
      // –î–ª—è –∞–¥–º–∏–Ω–∞: –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
      fetch(`/api/manager/${selectedManagerId}`)
        .then((response) => {
          if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞')
          }
          return response.json()
        })
        .then((data) => {
          setManagerStats(data) // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        })
        .catch((error) => console.error(error))
    }

    if (session.data.managerRole === 'manager') {
      // –î–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
      fetch(`/api/manager/${session.data.managerId}`)
        .then((response) => {
          if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞')
          }
          return response.json()
        })
        .then((data) => {
          setManagerStats(data) // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        })
        .catch((error) => console.error(error))
    }
  }, [selectedManagerId, session.data.managerRole, session.data.managerId])

  const handleManagerSelection = (managerId) => {
    setSelectedManagerId(managerId) // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
  }

  const getDataForCard = (managerStatsField, totalStatsField) => {
    return managerStats
      ? managerStats.manager[managerStatsField]?.length || 0
      : stats?.[totalStatsField] || 0
  }

  const useCountUp = (target) => {
    const [count, setCount] = useState(0);

    useEffect(() => {
      let start = 0;
      const end = target;
      const duration = 2; // –í—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
      const stepTime = 50; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
      const stepCount = (end - start) / (duration * 1000 / stepTime);

      const interval = setInterval(() => {
        start += stepCount;
        if (start >= end) {
          start = end;
          clearInterval(interval);
        }
        setCount(Math.floor(start));
      }, stepTime);

      return () => clearInterval(interval);
    }, [target]);

    return count;
  }

  if (!session) {
    return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É, –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –µ—â—ë –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞
  }

  if (session.data.managerRole !== 'admin' && session.data.managerRole !== 'manager') {
    return <div>–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–∏–º –¥–∞–Ω–Ω—ã–º.</div>; // –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ —è–≤–ª—è—é—â–∏—Ö—Å—è –∞–¥–º–∏–Ω–∞–º–∏ –∏–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏
  }

  return (
    <div>
      <h1>–ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª—å</h1>

      {/* –ï—Å–ª–∏ —Ä–æ–ª—å admin, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ */}
      {session.data.managerRole === 'admin' && (
        <ManagerSelector 
          managers={stats?.managers || []} 
          onManagerSelect={handleManagerSelection} 
        />
      )}

      <div>
        <div className="grid grid-cols-1 gap-4 md:grid-cols-2 md:gap-6 xl:grid-cols-4 2xl:gap-7.5">
          <CardDataStats title="–í—Å–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤" >
            <span>üë•</span>
            <motion.div
              key={getDataForCard('candidates', 'totalCandidates')}
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ duration: 0.5 }}
            >
              <span className="text-md font-semibold">{useCountUp(getDataForCard('candidates', 'totalCandidates'))}</span>
            </motion.div>
          </CardDataStats>

          <CardDataStats title="–í—Å–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤">
            <span>üì¶</span>
            <motion.div
              key={getDataForCard('partners', 'totalPartners')}
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ duration: 0.5 }}
            >
              <span className='text-sm font-semibold'>{useCountUp(getDataForCard('partners', 'totalPartners'))}</span>
            </motion.div>
          </CardDataStats>

          <CardDataStats title="–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π">
            <span>üßë‚Äçüíª</span>
            <motion.div
              key={getDataForCard('tasks', 'totalUsers')}
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ duration: 0.5 }}
            />
            <span className='text-sm font-semibold'>{useCountUp(getDataForCard('tasks', 'totalUsers'))}</span>
          </CardDataStats>
        </div>
      </div>
    </div>
  )
}

export default Stats
